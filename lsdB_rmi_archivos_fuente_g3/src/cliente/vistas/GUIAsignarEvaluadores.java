/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente.vistas;

import SGestionAnteproyectos.dto.FormatoADTO;
import SGestionAnteproyectos.dto.FormatoBDTO;
import SGestionAnteproyectos.dto.UsuarioDTO;
import cliente.ClienteDeObjetos;
import java.rmi.RemoteException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Laura
 */
public class GUIAsignarEvaluadores extends javax.swing.JFrame {
    GUICoordinador atrGUICOordinador;
    ClienteDeObjetos atrCO;

    /**
     * Creates new form GUIAsignarEvaluadores
     */
    public GUIAsignarEvaluadores(GUICoordinador prmGUI) {
        initComponents();
        cargarComboBox();
        atrGUICOordinador=prmGUI;
                
    }
    public GUIAsignarEvaluadores(){
    initComponents();}

    public void cargarComboBox() {
        try {
            atrCO = ClienteDeObjetos.getInstancia();

            List<FormatoADTO> listaAnteproyectos;
            listaAnteproyectos = atrCO.getObjRemotoAnteproyectos().consultarFormatoA();
            if (listaAnteproyectos.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se encontraron anteproyectos", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);

            } else {
                for (FormatoADTO formatoADTO : listaAnteproyectos) {
                    cmbCodigo.addItem(String.valueOf(formatoADTO.getCodigoAnteproyecto()));
                }
            }

            List<UsuarioDTO> listaUsuarios = atrCO.getObjRemotoUsuarios().listarUsuarios();
            if (listaUsuarios.size() <= 1) {
                JOptionPane.showMessageDialog(this, "No hay suficientes evaluadores registrados", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            } else {
                for (UsuarioDTO usuario : listaUsuarios) {
                    if (usuario.getRole().equals("EVALUADOR")) {
                        cmbEvaluadores.addItem(String.valueOf(usuario.getIdentificacion()));
                        cmbEvaluadores2.addItem(String.valueOf(usuario.getIdentificacion()));
                    }
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(GUIAsignarEvaluadores.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCodigo = new javax.swing.JLabel();
        cmbCodigo = new javax.swing.JComboBox<>();
        lblTitulo = new javax.swing.JLabel();
        lblEvaluador1 = new javax.swing.JLabel();
        cmbEvaluadores = new javax.swing.JComboBox<>();
        lblEvaluador2 = new javax.swing.JLabel();
        cmbEvaluadores2 = new javax.swing.JComboBox<>();
        btnAsignar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCodigo.setText("Seleccione el codigo del anteproyecto");

        lblTitulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTitulo.setText("Asignar Evaluadores");

        lblEvaluador1.setText("Seleccione el ID del evaluador 1:");

        lblEvaluador2.setText("Seleccione el ID del evaluador 2:");

        btnAsignar.setText("Asignar");
        btnAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarActionPerformed(evt);
            }
        });

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnVolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(lblTitulo)
                .addGap(142, 142, 142))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEvaluador1)
                            .addComponent(lblCodigo)
                            .addComponent(lblEvaluador2))
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbCodigo, 0, 69, Short.MAX_VALUE)
                            .addComponent(cmbEvaluadores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbEvaluadores2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(btnAsignar)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblTitulo))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVolver)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo)
                    .addComponent(cmbCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEvaluador1)
                    .addComponent(cmbEvaluadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEvaluador2)
                    .addComponent(cmbEvaluadores2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnAsignar)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarActionPerformed

        if (cmbCodigo.getSelectedItem()==null || cmbEvaluadores.getSelectedItem()==null || cmbEvaluadores2.getSelectedItem()==null) {
            JOptionPane.showMessageDialog(this, "Se debe seleccionar un anteproyecto y asignar los evaluadores", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            long codigo = Long.parseLong(cmbCodigo.getSelectedItem().toString());
            long idEv1 = Long.parseLong(cmbEvaluadores.getSelectedItem().toString());
            long idEv2 = Long.parseLong(cmbEvaluadores2.getSelectedItem().toString());
            if (cmbEvaluadores.getSelectedItem() != null && cmbEvaluadores2.getSelectedItem() != null) {

                if (idEv1 == idEv2) {
                    JOptionPane.showMessageDialog(this, "Los evaluadores seleccionados deben ser diferentes");
                } else {
                    try {

                        atrCO = ClienteDeObjetos.getInstancia();
                        FormatoBDTO formatoB = new FormatoBDTO();
                        formatoB.setCodigoAnteproyecto(codigo);
                        formatoB.setIdEvaluador(idEv1);
                        boolean res1 = atrCO.getObjRemotoAnteproyectos().registrarFormatoB(formatoB);
                        FormatoBDTO formatoB2 = new FormatoBDTO();
                        formatoB2.setCodigoAnteproyecto(codigo);
                        formatoB2.setIdEvaluador(idEv2);
                        boolean res2 = atrCO.getObjRemotoAnteproyectos().registrarFormatoB(formatoB2);
                        System.out.println("res1 "+res1 +" "+"res2 "+res2);
                        if (res1 == true && res2 == true) {

                            JOptionPane.showMessageDialog(this, "Evaluadores asignados correctamente", "INFO", JOptionPane.INFORMATION_MESSAGE);
                            this.dispose();
                             atrGUICOordinador.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(this, "No se pudieron asignasr los evaluadores", "ERROR", JOptionPane.ERROR_MESSAGE);
                            this.dispose();
                             atrGUICOordinador.setVisible(true);
                        }
                    } catch (Exception e) {
                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar el ID de los dos evaluadores");
            }
        }
    }//GEN-LAST:event_btnAsignarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.dispose();
        atrGUICOordinador.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIAsignarEvaluadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIAsignarEvaluadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIAsignarEvaluadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIAsignarEvaluadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIAsignarEvaluadores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsignar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cmbCodigo;
    private javax.swing.JComboBox<String> cmbEvaluadores;
    private javax.swing.JComboBox<String> cmbEvaluadores2;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblEvaluador1;
    private javax.swing.JLabel lblEvaluador2;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}
